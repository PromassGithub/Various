<?xml version="1.0" encoding="UTF-8"?>
<WidgetLibrary xmlns="http://www.br-automation.com/iat2014/widget">
	<Widget name="widgets.brease.Password">
		<ASEngineeringInfo>
			<IsProjectable>true</IsProjectable>
			<LicenseInfo>unlicensed</LicenseInfo>
		</ASEngineeringInfo>
		<Dependencies>
			<Files>
				<File>widgets/brease/TextInput/TextInput.js</File>
				<File>brease/enum/Enum.js</File>
			</Files>
			<Widgets>
				<Widget>widgets/brease/Password/Password.js</Widget>
				<Widget>widgets/brease/TextInput/TextInput.js</Widget>
			</Widgets>
		</Dependencies>
		<Categories>
			<Category name="Category">Login</Category>
			<Category name="Category">Text</Category>
			<Category name="Category">System</Category>
		</Categories>
		<Descriptions>
			<Description name="short">Versteckte Eingabe eines Strings</Description>
			<Description name="de">Ermöglicht dem Benutzer einen Text mit Passwortzeichen einzugeben</Description>
			<Description name="en">Enables the user to enter a text with password character masking</Description>
		</Descriptions>
		<Inheritance>
			<Class level="0">widgets.brease.Password</Class>
			<Class level="1">widgets.brease.TextInput</Class>
			<Class level="2">brease.core.BaseWidget</Class>
		</Inheritance>
		<Parents>
			<Parent>*</Parent>
		</Parents>
		<Children>
		</Children>
		<Methods>
			<Method name="GetValue" read="true">
				<Description>Gets the visible text</Description>
				<Result type="String"/>
			</Method>
			<Method name="SetEnable" read="false">
				<Description>Sets the state of property «enable»</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0" required="true"/>
				</Arguments>
			</Method>
			<Method name="SetStyle" read="false">
				<Arguments>
					<Argument name="value" type="StyleReference" index="0" required="true"/>
				</Arguments>
			</Method>
			<Method name="SetValue" read="false">
				<Description>sets the visible text</Description>
				<Arguments>
					<Argument name="value" type="String" index="0" required="true">
						<Description>The new value</Description>
					</Argument>
				</Arguments>
			</Method>
			<Method name="SetVisible" read="false">
				<Description>Sets the state of property «visible»</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0" required="true"/>
				</Arguments>
			</Method>
			<Method name="ShowTooltip" read="false"/>
			<Method name="SubmitChange" read="false">
				<Description>Send value to the server, if binding for this widget exists.&lt;br/&gt;
Usage of this method will only make sense, if submitOnChange=false, as otherwise changes are submitted automatically.				</Description>
			</Method>
		</Methods>
		<Events>
			<Event name="Click">
				<Description>Fired when element is clicked on.</Description>
				<Arguments>
					<Argument name="origin" type="String" index="0" required="true">
						<Description>id of widget that triggered this event</Description>
					</Argument>
					<Argument name="horizontalPos" type="String" index="1" required="true">
						<Description>horizontal position of click in pixel i.e &apos;10px&apos;</Description>
					</Argument>
					<Argument name="verticalPos" type="String" index="2" required="true">
						<Description>vertical position of click in pixel i.e &apos;10px&apos;</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="DisabledClick">
				<Description>Fired when disabled element is clicked on.</Description>
				<Arguments>
					<Argument name="origin" type="String" index="0" required="true">
						<Description>id of widget that triggered this event</Description>
					</Argument>
					<Argument name="hasPermission" type="Boolean" index="1" required="true">
						<Description>defines if the state is caused due to missing</Description>
					</Argument>
					<Argument name="horizontalPos" type="String" index="2" required="true">
						<Description>horizontal position of click in pixel i.e &apos;10px&apos;</Description>
					</Argument>
					<Argument name="verticalPos" type="String" index="3" required="true">
						<Description>vertical position of click in pixel i.e &apos;10px&apos;
roles of the current user						</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="EnableChanged">
				<Description>Fired when operability of the widget changes.</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0" required="true">
						<Description>operability</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="OnDragEnd">
				<Description>Fired when element has OnDragEnd.</Description>
				<Arguments>
					<Argument name="contentId" type="String" index="0" required="true">
						<Description>content id of the widget where the drag operation has ended</Description>
					</Argument>
					<Argument name="widgetId" type="String" index="1" required="true">
						<Description>id of the widget where the drag operation has ended</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="OnDragEnter">
				<Description>Fired when element has onDragEnter.</Description>
				<Arguments>
					<Argument name="contentId" type="String" index="0" required="true">
						<Description>content id of the widget that has been entering the droppable widget</Description>
					</Argument>
					<Argument name="widgetId" type="String" index="1" required="true">
						<Description>id of the widget that has been entering the droppable widget</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="OnDragLeave">
				<Description>Fired when element has OnDragLeave.</Description>
				<Arguments>
					<Argument name="contentId" type="String" index="0" required="true">
						<Description>content id of the widget that has been leaving the droppable widget</Description>
					</Argument>
					<Argument name="widgetId" type="String" index="1" required="true">
						<Description>id of the widget that has been leaving the droppable widget</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="OnDragStart">
				<Description>Fired when element has OnDragStart.</Description>
				<Arguments>
					<Argument name="contentId" type="String" index="0" required="true">
						<Description>content id of the widget where the drag operation has been started</Description>
					</Argument>
					<Argument name="widgetId" type="String" index="1" required="true">
						<Description>id of the widget where the drag operation has been started</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="OnDrop">
				<Description>Fired when element has OnDrop.</Description>
				<Arguments>
					<Argument name="contentId" type="String" index="0" required="true">
						<Description>content id of the widget that has been dropped on the droppable widget</Description>
					</Argument>
					<Argument name="widgetId" type="String" index="1" required="true">
						<Description>id of the widget that has been dropped on the droppable widget</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="ValueChanged">
				<Arguments>
					<Argument name="value" type="String" index="0" required="true">
						<Description>Fired when index changes.</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="VisibleChanged">
				<Description>Fired when the visibility of the widget changes.</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0" required="true">
						<Description>visibility</Description>
					</Argument>
				</Arguments>
			</Event>
		</Events>
		<Properties>
			<Property name="draggable" type="Boolean" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="false">
				<Description>Make widget draggable.</Description>
			</Property>
			<Property name="ellipsis" type="Boolean" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="false">
				<Description>If true, overflow of text is symbolized with an ellipsis.</Description>
			</Property>
			<Property name="enable" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>Initial option to enable widget.</Description>
			</Property>
			<Property name="inputRestriction" type="RegEx" initOnly="true" localizable="true" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="">
				<Description>Indicates the set of characters that a user can enter into the TextInput&lt;br/&gt;
If not defined (=default), there is no restriction.				</Description>
			</Property>
			<Property name="keyboard" type="Boolean" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>Determines if internal soft keyboard should open</Description>
			</Property>
			<Property name="maxLength" type="Integer" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="-1">
				<Description>The maxLength attribute specifies the maximum number of characters allowed in the TextInput&lt;br/&gt;
If maxLength &amp;lt; 0, there is no restriction.				</Description>
			</Property>
			<Property name="permissionOperate" type="RoleCollection" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Accessibility">
				<Description>restricts operability to users, which have given roles</Description>
			</Property>
			<Property name="permissionView" type="RoleCollection" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Accessibility">
				<Description>restricts visibility to users, which have given roles</Description>
			</Property>
			<Property name="placeholder" type="String" initOnly="true" localizable="true" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="">
				<Description>Specifies a short hint that describes the expected value of the input field</Description>
			</Property>
			<Property name="style" type="StyleReference" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="default">
				<Description>reference to a style for this widget type</Description>
			</Property>
			<Property name="submitOnChange" type="Boolean" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>Determines if changes, triggered by user input, should be sent immediately to the server.</Description>
			</Property>
			<Property name="tooltip" type="String" initOnly="true" localizable="true" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="">
				<Description>reference to a tooltip for a widget</Description>
			</Property>
			<Property name="value" type="String" initOnly="false" localizable="false" editableBinding="true" readOnly="false" required="false" projectable="true" category="Data" defaultValue="">
				<Description>Value displayed by the widget</Description>
			</Property>
			<Property name="visible" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>change visibility</Description>
			</Property>
		</Properties>
		<StyleProperties>
			<StyleProperty name="width" type="Size" not_styleable="true" owner="widgets.brease.Password" category="Layout" groupRefId="Size" groupOrder="1" default="100">
				<StyleElement attribute="@include elemWidth($value)"/>
				<Description>outer width of widget</Description>
			</StyleProperty>
			<StyleProperty name="height" type="Size" not_styleable="true" owner="widgets.brease.Password" category="Layout" groupRefId="Size" groupOrder="2" default="30">
				<StyleElement attribute="@include elemHeight($value)"/>
				<Description>outer height of widget</Description>
			</StyleProperty>
			<StyleProperty name="top" type="Integer" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" groupRefId="Position" groupOrder="1">
				<StyleElement attribute="@include elemTop($value)"/>
				<Description>absolute position measured from top boundary of parent container</Description>
			</StyleProperty>
			<StyleProperty name="left" type="Integer" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" groupRefId="Position" groupOrder="2">
				<StyleElement attribute="@include elemLeft($value)"/>
				<Description>absolute position measured from left boundary of parent container</Description>
			</StyleProperty>
			<StyleProperty name="zIndex" type="UInteger" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" required="true">
				<StyleElement attribute="z-index"/>
				<Description>The zIndex property specifies the z-order of a widget and its childs.&lt;br/&gt;
        When widgets overlap, z-order determines which one covers the other. A widget with a larger zIndex generally covers a widget with a lower one.&lt;br/&gt;
        The zIndex must be unique within a content.&lt;br/&gt;				</Description>
			</StyleProperty>
			<StyleProperty name="borderWidth" category="Appearance" type="PixelValCollection" default="2px" owner="widgets.brease.Password">
				<StyleElement selector="&amp;:not(.active):not(.disabled)" attribute="border-width"/>
				<Description>Sets the border width of the widget. For further information, please see its type</Description>
			</StyleProperty>
			<StyleProperty name="activeBorderWidth" category="Appearance" type="PixelValCollection" default="2px" owner="widgets.brease.Password">
				<StyleElement selector="&amp;.active:not(.disabled)" attribute="border-width"/>
				<Description>Sets the border width of the widget while writing in. For further information, please see its type</Description>
			</StyleProperty>
			<StyleProperty name="disabledBorderWidth" category="Appearance" type="PixelValCollection" default="2px" owner="widgets.brease.Password">
				<StyleElement selector="&amp;.disabled" attribute="border-width"/>
				<Description>Sets the border width of the widget when disbaled. For further information, please see its type</Description>
			</StyleProperty>
			<StyleProperty name="cornerRadius" category="Appearance" type="PixelValCollection" default="0px" owner="widgets.brease.Password">
				<StyleElement attribute="@include border-radius($value)"/>
				<Description>Sets the radius of the widget rounded corners. For further information, please see its type</Description>
			</StyleProperty>
			<StyleProperty name="backColor" category="Appearance" type="Color" default="#FFFFFF" owner="widgets.brease.Password">
				<StyleElement selector="&amp;:not(.disabled):not(.active)" attribute="background-color"/>
				<Description>Sets the background color of the widget</Description>
			</StyleProperty>
			<StyleProperty name="disabledBackColor" category="Appearance" type="Color" default="#F1F1F1">
				<StyleElement selector="&amp;.disabled" attribute="background-color"/>
				<Description>Sets the background color of the widget when disabled</Description>
			</StyleProperty>
			<StyleProperty name="backGroundGradient" category="Appearance" type="Gradient" default="" owner="widgets.brease.Password">
				<StyleElement selector="&amp;:not(.disabled)" attribute="@include backGroundGradient(&apos;$value&apos;)"/>
				<Description>Sets the background color of the widget as a gradient. For further information, please see CSS Gradients</Description>
			</StyleProperty>
			<StyleProperty name="disabledBackGroundGradient" category="Appearance" type="Gradient" default="">
				<StyleElement selector="&amp;.disabled" attribute="@include backGroundGradient(&apos;$value&apos;)"/>
				<Description>Sets the background color of the widget when disabled as a gradient. For further information, please see CSS Gradients property</Description>
			</StyleProperty>
			<StyleProperty name="borderColor" category="Appearance" type="ColorCollection" default="#999999" owner="widgets.brease.Password">
				<StyleElement selector="&amp;:not(.disabled):not(.active)" attribute="border-color"/>
				<Description>Sets the border color of the widget. For further information, please see its type</Description>
			</StyleProperty>
			<StyleProperty name="disabledBorderColor" category="Appearance" type="ColorCollection" default="#C8C8C8">
				<StyleElement selector="&amp;.disabled" attribute="border-color"/>
				<Description>Sets the border color of the widget when disabled. For further information, please see its type</Description>
			</StyleProperty>
			<StyleProperty name="borderStyle" category="Appearance" type="BorderStyle" default="solid" owner="widgets.brease.Password">
				<StyleElement selector="" attribute="border-style"/>
				<Description>Style of the border of the widget. For further information, please see its type</Description>
			</StyleProperty>
			<StyleProperty name="textColor" type="Color" category="Appearance" default="#000000" owner="widgets.brease.Password">
				<StyleElement selector="&amp;:not(.disabled):not(.active) input" attribute="color"/>
				<Description>Sets the color of the displayed text</Description>
			</StyleProperty>
			<StyleProperty name="placeholderTextColor" type="Color" category="Appearance" default="#C8C8C8">
				<StyleElement selector="input::placeholder" attribute="color"/>
				<StyleElement selector="input::-webkit-input-placeholder" attribute="color"/>
				<Description>Sets the color of the displayed placeholder</Description>
			</StyleProperty>
			<StyleProperty name="disabledTextColor" category="Appearance" type="Color" default="#C8C8C8">
				<StyleElement selector="&amp;.disabled input" attribute="color"/>
				<StyleElement selector="&amp;.disabled span.breaseNumericInput_unit" attribute="color"/>
				<Description>Sets the color of the displayed text when the widget is disabled</Description>
			</StyleProperty>
			<StyleProperty name="activeBorderColor" category="Appearance" type="ColorCollection" default="#FF8800">
				<StyleElement selector="&amp;:not(.disabled).active" attribute="border-color"/>
				<Description>Sets the border color of the widget while writing in. For further information, please see its type</Description>
			</StyleProperty>
			<StyleProperty name="activeBackColor" category="Appearance" type="Color" default="#F7F7FF">
				<StyleElement selector="&amp;:not(.disabled).active" attribute="background-color"/>
				<Description>Sets the background color of the widget while writing in</Description>
			</StyleProperty>
			<StyleProperty name="activeTextColor" category="Appearance" type="Color" default="#333333">
				<StyleElement selector="&amp;:not(.disabled).active input" attribute="color"/>
				<Description>Sets the color of the displayed text while writing</Description>
			</StyleProperty>
			<StyleProperty name="textAlign" category="Appearance" type="brease.enum.TextAlign" default="right" owner="widgets.brease.Password">
				<StyleElement selector="input" attribute="@include text-alignment($value)"/>
				<Description>Sets the alignment of the text. For further information, please see its type</Description>
			</StyleProperty>
			<StyleProperty name="opacity" category="Appearance" type="Opacity" default="1" owner="widgets.brease.Password">
				<StyleElement selector="" attribute="opacity"/>
				<Description>Sets the opacity of the widget</Description>
			</StyleProperty>
			<StyleProperty name="fontName" category="Font" type="FontName" default="Arial" owner="widgets.brease.Password">
				<StyleElement selector="input" attribute="font-family"/>
				<Description>Sets the font name of the displayed text</Description>
			</StyleProperty>
			<StyleProperty name="fontSize" category="Font" type="PixelVal" default="20px" owner="widgets.brease.Password">
				<StyleElement selector="input" attribute="font-size"/>
				<Description>Sets the font size of the displayed text in pixel</Description>
			</StyleProperty>
			<StyleProperty name="bold" category="Font" type="Boolean" default="true" owner="widgets.brease.Password">
				<StyleElement selector="input" attribute="@include font-weight-bold($value)"/>
				<Description>If **true**, it sets the font style to bold</Description>
			</StyleProperty>
			<StyleProperty name="rotation" category="Appearance" type="Rotation" default="0deg" owner="widgets.brease.Password">
				<StyleElement selector="" attribute="@include rotate($value)"/>
				<Description>Sets the rotation of the widget with respect to its center. Positive values for clockwise direction</Description>
			</StyleProperty>
			<StyleProperty name="italic" category="Font" type="Boolean" default="false" owner="widgets.brease.Password">
				<StyleElement selector="input" attribute="@include font-style-italic($value)"/>
				<Description>If **true**, it sets the font style to italic</Description>
			</StyleProperty>
			<StyleProperty name="shadow" category="Appearance" type="Shadow" default="none" owner="widgets.brease.Password">
				<StyleElement attribute="@include box-shadow($value)"/>
				<Description>Sets the shadow effect of the widget. For further information, please see its type</Description>
			</StyleProperty>
			<StyleProperty name="padding" category="Layout" type="Padding" default="0 15px 0 15px" owner="widgets.brease.Password">
				<StyleElement attribute="padding"/>
				<Description>Sets a space around the displayed text. For further information, please see its type</Description>
			</StyleProperty>
			<StyleProperty name="margin" category="Layout" type="Margin" default="0px" owner="widgets.brease.Password">
				<StyleElement attribute="margin"/>
				<Description>Sets a space around the widget. For further information, please see its type</Description>
			</StyleProperty>
		</StyleProperties>
		<PropertyGroups>
			<PropertyGroup name="Size" type="String" category="Layout">
				<Description>outer height and width of widget</Description>
			</PropertyGroup>
			<PropertyGroup name="Position" type="String" category="Layout">
				<Description>top and left of widget</Description>
			</PropertyGroup>
		</PropertyGroups>
	<BindingTemplates>
  
</BindingTemplates>
</Widget>
</WidgetLibrary>