<?xml version="1.0" encoding="utf-8"?>
<StyleInformation name="widgets.brease.DropDownBox" xmlns="http://www.br-automation.com/iat2014/widgetStyles"
									xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <StyleProperties>
   
  <!-- Main style properties -->

    <StyleProperty name="width" type="Size" not_styleable="true" default="100" category="Layout">
      <StyleElement selector="&amp;.DropDownBoxView" attribute="@include elemWidth($value)"></StyleElement>
      <Description>outer width of widget</Description>
    </StyleProperty>
    
    <StyleProperty name="height" type="Size" not_styleable="true" default="30" category="Layout">
      <StyleElement selector="&amp;.DropDownBoxView" attribute="@include elemHeight($value)"></StyleElement>
      <Description>outer height of widget</Description>
    </StyleProperty>

    <StyleProperty name="cornerRadius" category="Appearance" type="PixelValCollection" default="0px">
      <StyleElement selector="&amp;.DropDownBoxView" attribute="@include border-radius($value)"></StyleElement>
      <StyleElement selector="&amp; > .ItemView" attribute="@include border-radius($value)"></StyleElement>
      <StyleElement idsuffix="_listBoxWrapper" selector="&amp; > .ListView.Container" attribute="@include border-radius($value)"></StyleElement>
      <Description>
        Sets the radius of both widget and the drop-down list rounded corners. For further information, please check its type
      </Description>
    </StyleProperty>

    <StyleProperty name="opacity" category="Appearance" type="Opacity" default="1" >
      <StyleElement attribute="opacity"></StyleElement>
      <StyleElement idsuffix="_listBoxWrapper" attribute="opacity"></StyleElement>
      <Description>
        Opacity of the widget
      </Description>
    </StyleProperty>

    <StyleProperty name="margin" category="Layout" type="Margin" default="0px">
      <StyleElement selector="&amp;.DropDownBoxView" attribute="margin"></StyleElement>
      <Description>
        Margin of the Widget
      </Description>
    </StyleProperty>

    <StyleProperty name="shadow" category="Appearance" type="Shadow" default="none">
      <StyleElement selector="&amp;.DropDownBoxView" attribute="@include box-shadow($value)"></StyleElement>
      <Description>
        Shadow of the Widget
      </Description>
    </StyleProperty>    

    <!-- Main Item style properties -->
  
    <StyleProperty name="backColor" category="Appearance" type="Color" default="#DBDBDB">
      <StyleElement selector="&amp; > .ItemView:not(.itemSelected):not(.itemDisabled)" attribute="background-color"></StyleElement>
      <Description>
        Sets the background color of the widget
      </Description>
    </StyleProperty>

    <StyleProperty name="mouseDownBackColor" category="Appearance" type="Color" default="#DBDBDB">
      <StyleElement selector="&amp; > .ItemView.itemSelected:not(.itemDisabled)" attribute="background-color"></StyleElement>
      <Description>
        Sets the background color of the widget when it is clicked and the drop-down list is displayed
      </Description>
    </StyleProperty>

    <StyleProperty name="disabledBackColor" category="Appearance" type="Color" default="#F1F1F1" >
      <StyleElement selector="&amp; > .ItemView.itemDisabled" attribute="background-color"></StyleElement>
      <Description>
        Sets the background color when the widget is disabled
      </Description>
    </StyleProperty>   
  
    <StyleProperty name="backGroundGradient" category="Appearance" type="Gradient" default="">
      <StyleElement selector="&amp; > .ItemView:not(.itemSelected):not(.itemDisabled)" attribute="@include backGroundGradient('$value')"></StyleElement>
      <Description>
        Sets the background color of the items not selected as a gradient
      </Description>
    </StyleProperty>

    <StyleProperty name="mouseDownBackGroundGradient" category="Appearance" type="Gradient" default="">
      <StyleElement selector="&amp; > .ItemView.itemSelected:not(.itemDisabled)" attribute="@include backGroundGradient('$value')"></StyleElement>
      <Description>
        ets the text color of the widget when it is clicked and the drop-down list is displayed
      </Description>
    </StyleProperty>

    <StyleProperty name="disabledBackGroundGradient" category="Appearance" type="Gradient" default="">
      <StyleElement selector="&amp; > .ItemView.itemDisabled" attribute="@include backGroundGradient('$value')"></StyleElement>
      <Description>
        Background as a gradient
      </Description>
    </StyleProperty>

    <StyleProperty name="borderStyle" category="Appearance" type="BorderStyle" default="solid" >
      <StyleElement selector="&amp; > .ItemView" attribute="border-style"></StyleElement>
      <Description>
        Sets the border style of the widget. For further information, please see its type
      </Description>
    </StyleProperty>    
    
    <StyleProperty name="borderWidth" category="Appearance" type="PixelValCollection" default="2px">
      <StyleElement selector="&amp; > .ItemView:not(.itemSelected)" attribute="border-width"></StyleElement>
      <Description>
        Sets the width of the border. For further information, please see its type
      </Description>
    </StyleProperty>

    <StyleProperty name="mouseDownBorderWidth" category="Appearance" type="PixelValCollection" default="2px">
      <StyleElement selector="&amp; > .ItemView.itemSelected" attribute="border-width"></StyleElement>
      <Description>
        Sets the border with of the widget when it is clicked and the drop-down list is displayed
      </Description>
    </StyleProperty>    

    <StyleProperty name="borderColor" category="Appearance" type="ColorCollection" default="#5B7C70">
      <StyleElement selector="&amp; > .ItemView:not(.itemSelected):not(.itemDisabled)" attribute="border-color"></StyleElement>
      <StyleElement idsuffix="_listBoxWrapper" selector="&amp; > .ListView.Container" attribute="border-color"></StyleElement>
      <Description>
        Sets the border color of both the widget and the drop-down list
      </Description>
    </StyleProperty>   

    <StyleProperty name="mouseDownBorderColor" category="Appearance" type="ColorCollection" default="#FD7B01">
      <StyleElement selector="&amp; > .ItemView.itemSelected:not(.itemDisabled)" attribute="border-color"></StyleElement>
      <Description>
        Sets the border color of the widget when it is clicked and the drop-down list is displayed
      </Description>
    </StyleProperty>

    <StyleProperty name="disabledBorderColor" category="Appearance" type="ColorCollection" default="#FFFFFF #C8C8C8 #C8C8C8 #FFFFFF">
      <StyleElement selector="&amp; > .ItemView.itemDisabled" attribute="border-color"></StyleElement>
      <Description>
        Sets the border color when the widget is disabled
      </Description>
    </StyleProperty>

    <StyleProperty name="textColor" category="Appearance" type="Color" default="#000000">
      <StyleElement selector="&amp; > .ItemView:not(.itemSelected):not(.itemDisabled) > .TextView:not(.textSelected)" attribute="color"></StyleElement>
      <Description>
        Sets the color of the text displayed by the widget
      </Description>
    </StyleProperty>    
    
    <StyleProperty name="mouseDownTextColor" category="Appearance" type="Color" default="#000000">
      <StyleElement selector="&amp; > .ItemView.itemSelected:not(.itemDisabled) > .TextView.textSelected" attribute="color"></StyleElement>
      <Description>
        Sets the text color of the widget when it is clicked and the drop-down list is displayed
      </Description>
    </StyleProperty>

    <StyleProperty name="disabledTextColor" category="Appearance" type="Color" default="#989898" >
      <StyleElement selector="&amp; > .ItemView.itemDisabled > .TextView" attribute="color"></StyleElement>
      <Description>
        Sets the color of the text when the widget is disabled
      </Description>
    </StyleProperty>

    <StyleProperty name="padding" category="Layout" type="Padding" default="0 10px">
      <StyleElement selector="&amp; > .ItemView" attribute="padding"></StyleElement>
      <Description>
        Padding of the Widget
      </Description>
    </StyleProperty> 
    
    <StyleProperty name="showOpenIndicator" type="Boolean" default="false" category="Appearance">
      <StyleElement selector="&amp; > .ItemView > .ImageView.ImageIndicator" attribute="@include display($value, 'flex')"></StyleElement>
      <Description>
        If **true** the indicator image is displayed
      </Description>
    </StyleProperty>

    <StyleProperty name="openIndicatorColor" category="Appearance" type="Color" default="#000000" >
      <StyleElement selector="&amp; > .ItemView:not(.itemSelected):not(.itemDisabled) > .ImageView.ImageIndicator svg" attribute="fill"></StyleElement>
      <Description>Color of the image to open the list</Description>
    </StyleProperty>

    <StyleProperty name="mouseDownOpenIndicatorColor" category="Appearance" type="Color" default="#000000" >
      <StyleElement selector="&amp; > .ItemView.itemSelected:not(.itemDisabled) > .ImageView.ImageIndicator svg" attribute="fill"></StyleElement>
      <Description>Color of the image to open the list during mouseDown</Description>
    </StyleProperty>

    <StyleProperty name="disabledOpenIndicatorColor" category="Appearance" type="Color" default="#989898" >
      <StyleElement selector="&amp; > .ItemView.itemDisabled > .ImageView.ImageIndicator svg" attribute="fill"></StyleElement>
      <Description>Color of the image to open the list when the widget is disabled</Description>
    </StyleProperty>
    
    <!-- List style properties -->

    <StyleProperty name="listPadding" category="Layout" type="Padding" default="0 15px">
      <StyleElement idsuffix="_listBoxWrapper" selector="&amp; > .ListView.Container > .ListView.List > .ItemView" attribute="padding"></StyleElement>
      <Description>
        Padding of the list
      </Description>
    </StyleProperty>       
      
    <StyleProperty name="listBackColor" category="Appearance" type="Color" default="#FFFFFF">
      <StyleElement idsuffix="_listBoxWrapper" selector="&amp; > .ListView.Container > .ListView.List > .ItemView:not(.itemSelected)" attribute="background-color"></StyleElement>
      <Description>
        Sets the background color of the drop-down list
      </Description>
    </StyleProperty>

    <StyleProperty name="listBackGroundGradient" category="Appearance" type="Gradient" default="">
      <StyleElement idsuffix="_listBoxWrapper" selector="&amp; > .ListView.Container > .ListView.List > .ItemView:not(.itemSelected)" attribute="@include backGroundGradient('$value')"></StyleElement>
      <Description>
        Background as a gradient
      </Description>
    </StyleProperty>    

    <StyleProperty name="activeBackColor" category="Appearance" type="Color" default="#ff8800">
      <StyleElement idsuffix="_listBoxWrapper" selector="&amp; > .ListView.Container > .ListView.List > .ItemView.itemSelected" attribute="background-color"></StyleElement>
      <Description>
        Sets the background color of the selected item
      </Description>
    </StyleProperty>

    <StyleProperty name="activeBackGroundGradient" category="Appearance" type="Gradient" default="">
      <StyleElement idsuffix="_listBoxWrapper" selector="&amp; > .ListView.Container > .ListView.List > .ItemView.itemSelected" attribute="@include backGroundGradient('$value')"></StyleElement>
      <Description>
        Sets the background color of the selected item as a gradient
      </Description>
    </StyleProperty>

    <StyleProperty name="listSeparatorColor" category="Appearance" type="Color" default="#000">
      <StyleElement idsuffix="_listBoxWrapper" selector="&amp; > .ListView.Container > .ListView.List > .ItemView" attribute="border-bottom-color"></StyleElement>
      <Description>
        Sets the color of the list separator
      </Description>
    </StyleProperty>

    <StyleProperty name="listBorderWidth" category="Appearance"  type="PixelValCollection" default="2px">
      <StyleElement idsuffix="_listBoxWrapper" selector="&amp; > .ListView.Container" attribute="border-width"></StyleElement>
      <Description>
        Sets the width of the border around the drop-down list. For further information, please check its type
      </Description>
    </StyleProperty>

    <StyleProperty name="listTextColor" category="Appearance" type="Color" default="#000000">
      <StyleElement idsuffix="_listBoxWrapper" selector="&amp; > .ListView.Container > .ListView.List > .ItemView > .TextView:not(.textSelected)" attribute="color"></StyleElement>
      <Description>
        Sets the color of the text of the drop-down list
      </Description>
    </StyleProperty>

    <StyleProperty name="activeTextColor" category="Appearance" type="Color" default="#ffffff">
      <StyleElement idsuffix="_listBoxWrapper" selector="&amp; > .ListView.Container > .ListView.List > .ItemView > .TextView.textSelected" attribute="color"></StyleElement>
      <Description>
        Sets the text color of the selected item
      </Description>
    </StyleProperty>    
  
    <!-- Text style properties -->
  
    <StyleProperty name="textAlign" category="Appearance"  type="brease.enum.TextAlign" default="center">
      <StyleElement selector="&amp; .TextView" attribute="@include text-alignment($value)"></StyleElement>
      <StyleElement idsuffix="_listBoxWrapper" selector="&amp; .TextView" attribute="@include text-alignment($value)"></StyleElement>
      <Description>
        Alignment of the text
      </Description>
    </StyleProperty>
  
    <StyleProperty name="fontSize" category="Font" type="PixelVal" default="12px">
      <StyleElement selector="&amp; .TextView" attribute="font-size"></StyleElement>
      <StyleElement idsuffix="_listBoxWrapper" selector="&amp; .TextView" attribute="font-size"></StyleElement>
      <Description>
        Fontsize of the text in pixel
      </Description>
    </StyleProperty>
  
    <StyleProperty name="fontName" category="Font" type="FontName" default="Arial">
      <StyleElement selector="&amp; .TextView" attribute="font-family"></StyleElement>
      <StyleElement idsuffix="_listBoxWrapper" selector="&amp; .TextView" attribute="font-family"></StyleElement>
      <Description>
        Fontname of the text
      </Description>
    </StyleProperty>
  
    <StyleProperty name="bold" category="Font" type="Boolean" default="true">
      <StyleElement selector="&amp; .TextView" attribute="@include font-weight-bold($value)"></StyleElement>
      <StyleElement idsuffix="_listBoxWrapper" selector="&amp; .TextView" attribute="@include font-weight-bold($value)"></StyleElement>
      <Description>
        If **true** font style is bold
      </Description>
    </StyleProperty>
  
    <StyleProperty name="italic" category="Font" type="Boolean" default="false">
      <StyleElement selector="&amp; .TextView" attribute="@include font-style-italic($value)"></StyleElement>
      <StyleElement idsuffix="_listBoxWrapper" selector="&amp; .TextView" attribute="@include font-style-italic($value)"></StyleElement>
      <Description>
        If **true** font style is italic
      </Description>
    </StyleProperty>
    
  </StyleProperties>
  
</StyleInformation>
