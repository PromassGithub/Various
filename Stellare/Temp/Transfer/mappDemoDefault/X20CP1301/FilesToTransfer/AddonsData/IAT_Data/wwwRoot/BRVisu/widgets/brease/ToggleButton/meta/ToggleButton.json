{"name":"widgets.brease.ToggleButton","type":"widget","meta":{"superClass":"widgets.brease.Button","requires":[],"mixins":[],"parents":["*"],"children":[],"inheritance":["widgets.brease.ToggleButton","widgets.brease.Button","brease.core.BaseWidget"],"filePath":"widgets/brease/ToggleButton/ToggleButton.js"},"methods":[{"name":"GetValueBool","originalName":"getValueBool","read":true,"description":"<p>Get value dependent on state. false -> not checked, true -> checked.</p>\n","iatStudioExposed":true,"result":{"name":"return","type":"Boolean","description":"\n"}},{"name":"GetValueInteger","originalName":"getValueInteger","read":true,"description":"<p>Get value dependent on state0 -> not checked, 1 -> checked.</p>\n","iatStudioExposed":true,"result":{"name":"return","type":"Integer","description":"\n"}},{"name":"RemoveImage","originalName":"removeImage","read":false,"description":"<p>Remove an image.</p>\n","iatStudioExposed":true},{"name":"RemoveMouseDownText","originalName":"removeMouseDownText","read":false,"description":"<p>Remove mouseDownText.</p>\n","iatStudioExposed":true},{"name":"RemoveText","originalName":"removeText","read":false,"description":"<p>Remove text.</p>\n","iatStudioExposed":true},{"name":"setBreakWord","originalName":"setBreakWord","read":false,"description":"<p>Sets the value for break word.</p>\n","iatStudioExposed":false,"parameter":[{"name":"breakWord","type":"Boolean","index":0,"description":"\n","optional":false}]},{"name":"setEditable","originalName":"setEditable","read":false,"description":"<p>Sets the state of property «editable»<br/>\nUsed for «editable» binding; method is called exclusevely by the framework</p>\n","iatStudioExposed":false,"parameter":[{"name":"editable","type":"Boolean","index":0,"description":"\n","optional":false},{"name":"metaData","type":"Object","index":1,"description":"\n","optional":false}]},{"name":"setEllipsis","originalName":"setEllipsis","read":false,"description":"<p>Sets the value if ellipsis should be used.</p>\n","iatStudioExposed":false,"parameter":[{"name":"ellipsis","type":"Boolean","index":0,"description":"\n","optional":false}]},{"name":"SetEnable","originalName":"setEnable","read":false,"description":"<p>Sets the state of property «enable»</p>\n","iatStudioExposed":true,"parameter":[{"name":"value","type":"Boolean","index":0,"description":"\n","optional":false}]},{"name":"SetImage","originalName":"setImage","read":false,"description":"<p>Sets an image.</p>\n","iatStudioExposed":true,"parameter":[{"name":"image","type":"ImagePath","index":0,"description":"\n","optional":false}]},{"name":"setImageAlign","originalName":"setImageAlign","read":false,"description":"<p>Sets the value for image align.</p>\n","iatStudioExposed":false,"parameter":[{"name":"imageAlign","type":"brease.enum.ImageAlign","index":0,"description":"\n","optional":false}]},{"name":"SetMouseDownImage","originalName":"setMouseDownImage","read":false,"description":"<p>Sets the image when mouse down</p>\n","iatStudioExposed":true,"parameter":[{"name":"mouseDownImage","type":"ImagePath","index":0,"description":"\n","optional":false}]},{"name":"SetMouseDownText","originalName":"setMouseDownText","read":false,"description":"<p>Sets the visible text for pressed state. This method can remove an optional textkey.</p>\n","iatStudioExposed":true,"parameter":[{"name":"text","type":"String","index":0,"description":"\n","optional":false,"localizable":"true"},{"name":"keepKey","type":"Boolean","index":1,"description":"<p>Set true, if textkey should not be removed</p>\n","optional":false}]},{"name":"setMouseDownTextKey","originalName":"setMouseDownTextKey","read":false,"description":"<p>set the textkey for mouseDownText</p>\n","iatStudioExposed":false,"parameter":[{"name":"key","type":"String","index":0,"description":"<p>The new textkey</p>\n","optional":false}]},{"name":"setMultiLine","originalName":"setMultiLine","read":false,"description":"<p>Sets the value for multiLine.</p>\n","iatStudioExposed":false,"parameter":[{"name":"multiLine","type":"Boolean","index":0,"description":"\n","optional":false}]},{"name":"SetStyle","originalName":"setStyle","read":false,"description":"\n","iatStudioExposed":true,"parameter":[{"name":"value","type":"StyleReference","index":0,"description":"\n","optional":false}]},{"name":"SetText","originalName":"setText","read":false,"description":"<p>Sets the visible text. This method can remove an optional textkey.</p>\n","iatStudioExposed":true,"parameter":[{"name":"text","type":"String","index":0,"description":"\n","optional":false,"localizable":"true"},{"name":"keepKey","type":"Boolean","index":1,"description":"<p>Set true, if textkey should not be removed</p>\n","optional":false}]},{"name":"setTextKey","originalName":"setTextKey","read":false,"description":"<p>set the textkey</p>\n","iatStudioExposed":false,"parameter":[{"name":"key","type":"String","index":0,"description":"<p>The new textkey</p>\n","optional":false}]},{"name":"SetValue","originalName":"setValue","read":false,"description":"<p>Toggle button dependent of a value.<br/>\nThis method is used for binding.</p>\n","iatStudioExposed":true,"parameter":[{"name":"value","type":"Integer","index":0,"description":"\n","optional":false}]},{"name":"SetValueBool","originalName":"setValueBool","read":false,"description":"<p>Toggle button dependent of a value. false -> not checked, true -> checked.</p>\n","iatStudioExposed":true,"parameter":[{"name":"value","type":"Boolean","index":0,"description":"\n","optional":false}]},{"name":"SetValueInteger","originalName":"setValueInteger","read":false,"description":"<p>Toggle button dependent of a value. 0 -> not checked, 1 -> checked.</p>\n","iatStudioExposed":true,"parameter":[{"name":"value","type":"Integer","index":0,"description":"\n","optional":false}]},{"name":"SetVisible","originalName":"setVisible","read":false,"description":"<p>Sets the state of property «visible»</p>\n","iatStudioExposed":true,"parameter":[{"name":"value","type":"Boolean","index":0,"description":"\n","optional":false}]},{"name":"setWordWrap","originalName":"setWordWrap","read":false,"description":"<p>Sets the value for word wrap.</p>\n","iatStudioExposed":false,"parameter":[{"name":"wordWrap","type":"Boolean","index":0,"description":"\n","optional":false}]},{"name":"ShowTooltip","originalName":"showTooltip","read":false,"description":"\n","iatStudioExposed":true}],"events":[{"name":"Click","description":"<p>Fired when element is clicked on.</p>\n","parameter":[{"name":"origin","type":"String","index":0,"description":"<p>id of widget that triggered this event</p>\n\n\n\n","optional":false},{"name":"horizontalPos","type":"String","index":1,"description":"<p>horizontal position of click in pixel i.e '10px'</p>\n\n\n\n","optional":false},{"name":"verticalPos","type":"String","index":2,"description":"<p>vertical position of click in pixel i.e '10px'</p>\n\n\n\n","optional":false}]},{"name":"DisabledClick","description":"<p>Fired when disabled element is clicked on.</p>\n","parameter":[{"name":"origin","type":"String","index":0,"description":"<p>id of widget that triggered this event</p>\n","optional":false},{"name":"hasPermission","type":"Boolean","index":1,"description":"<p>defines if the state is caused due to missing</p>\n","optional":false},{"name":"horizontalPos","type":"String","index":2,"description":"<p>horizontal position of click in pixel i.e '10px'</p>\n","optional":false},{"name":"verticalPos","type":"String","index":3,"description":"<p>vertical position of click in pixel i.e '10px'\nroles of the current user</p>\n","optional":false}]},{"name":"DoubleClick","description":"\n","parameter":[{"name":"horizontalPos","type":"String","index":0,"description":"<p>horizontal position of click in pixel i.e '10px'</p>\n","optional":false},{"name":"verticalPos","type":"String","index":1,"description":"<p>vertical position of click in pixel i.e '10px'\nFired when element has double click.</p>\n","optional":false}]},{"name":"EnableChanged","description":"<p>Fired when operability of the widget changes.</p>\n","parameter":[{"name":"value","type":"Boolean","index":0,"description":"<p>operability</p>\n\n\n\n","optional":false}]},{"name":"MouseDown","description":"\n","parameter":[{"name":"horizontalPos","type":"String","index":0,"description":"<p>horizontal position of mouse in pixel i.e '10px'</p>\n","optional":false},{"name":"verticalPos","type":"String","index":1,"description":"<p>vertical position of mouse in pixel i.e '10px'\nFired when widget enters mouseDown state</p>\n","optional":false}]},{"name":"MouseUp","description":"\n","parameter":[{"name":"horizontalPos","type":"String","index":0,"description":"<p>horizontal position of mouse in pixel i.e '10px'</p>\n","optional":false},{"name":"verticalPos","type":"String","index":1,"description":"<p>vertical position of mouse in pixel i.e '10px'\nFired when widget enters mouseUp state</p>\n","optional":false}]},{"name":"OnDragEnd","description":"<p>Fired when element has OnDragEnd.</p>\n","parameter":[{"name":"contentId","type":"String","index":0,"description":"<p>content id of the widget where the drag operation has ended</p>\n","optional":false},{"name":"widgetId","type":"String","index":1,"description":"<p>id of the widget where the drag operation has ended</p>\n","optional":false}]},{"name":"OnDragEnter","description":"<p>Fired when element has onDragEnter.</p>\n","parameter":[{"name":"contentId","type":"String","index":0,"description":"<p>content id of the widget that has been entering the droppable widget</p>\n","optional":false},{"name":"widgetId","type":"String","index":1,"description":"<p>id of the widget that has been entering the droppable widget</p>\n","optional":false}]},{"name":"OnDragLeave","description":"<p>Fired when element has OnDragLeave.</p>\n","parameter":[{"name":"contentId","type":"String","index":0,"description":"<p>content id of the widget that has been leaving the droppable widget</p>\n","optional":false},{"name":"widgetId","type":"String","index":1,"description":"<p>id of the widget that has been leaving the droppable widget</p>\n","optional":false}]},{"name":"OnDragStart","description":"<p>Fired when element has OnDragStart.</p>\n","parameter":[{"name":"contentId","type":"String","index":0,"description":"<p>content id of the widget where the drag operation has been started</p>\n","optional":false},{"name":"widgetId","type":"String","index":1,"description":"<p>id of the widget where the drag operation has been started</p>\n","optional":false}]},{"name":"OnDrop","description":"<p>Fired when element has OnDrop.</p>\n","parameter":[{"name":"contentId","type":"String","index":0,"description":"<p>content id of the widget that has been dropped on the droppable widget</p>\n","optional":false},{"name":"widgetId","type":"String","index":1,"description":"<p>id of the widget that has been dropped on the droppable widget</p>\n","optional":false}]},{"name":"ValueChanged","description":"\n","parameter":[{"name":"newValue","type":"Integer","index":0,"description":"\n","optional":false},{"name":"newValueBool","type":"Boolean","index":1,"description":"\n","optional":false},{"name":"newValueInteger","type":"Integer","index":2,"description":"<p>Fired when the status of the widget is changed by user interaction</p>\n","optional":false}]},{"name":"VisibleChanged","description":"<p>Fired when the visibility of the widget changes.</p>\n","parameter":[{"name":"value","type":"Boolean","index":0,"description":"<p>visibility</p>\n\n\n\n","optional":false}]}],"properties":[{"name":"breakWord","type":"Boolean","initOnly":true,"localizable":false,"editableBinding":false,"readOnly":false,"required":false,"owner":"widgets.brease.Button","projectable":true,"description":"Allows lines to be broken within words if an otherwise unbreakable string is too long to fit.\n","category":"Behavior","defaultValue":"false"},{"name":"draggable","type":"Boolean","initOnly":true,"localizable":false,"editableBinding":false,"readOnly":false,"required":false,"owner":"widgets.brease.common.DragDropProperties.libs.DraggablePropertiesEvents","projectable":true,"description":"Make widget draggable.\n","category":"Behavior","defaultValue":"false"},{"name":"ellipsis","type":"Boolean","initOnly":true,"localizable":false,"editableBinding":false,"readOnly":false,"required":false,"owner":"widgets.brease.Button","projectable":true,"description":"If true, overflow of text is symbolized with an ellipsis. This option has no effect, if wordWrap = true.\n","category":"Behavior","defaultValue":"false"},{"name":"enable","type":"Boolean","initOnly":false,"localizable":false,"editableBinding":false,"readOnly":false,"required":false,"owner":"brease.core.BaseWidget","projectable":true,"description":"Initial option to enable widget.\n","category":"Behavior","defaultValue":"true"},{"name":"image","type":"ImagePath","initOnly":false,"localizable":false,"editableBinding":false,"readOnly":false,"required":false,"owner":"widgets.brease.Button","projectable":true,"description":"Path to an optional image.\n","category":"Appearance","defaultValue":""},{"name":"imageAlign","type":"brease.enum.ImageAlign","initOnly":true,"localizable":false,"editableBinding":false,"readOnly":false,"required":false,"owner":"widgets.brease.Button","projectable":true,"description":"Position of image relative to text.\n","category":"Appearance","defaultValue":"left"},{"name":"mouseDownImage","type":"ImagePath","initOnly":false,"localizable":false,"editableBinding":false,"readOnly":false,"required":false,"owner":"widgets.brease.ToggleButton","projectable":true,"description":"Path to an optional image to be shown in 'checked' state.\n","category":"Appearance","defaultValue":""},{"name":"mouseDownText","type":"String","initOnly":false,"localizable":true,"editableBinding":false,"readOnly":false,"required":false,"owner":"widgets.brease.Button","projectable":true,"description":"Text which is displayed in the widget when pressed\n","category":"Appearance","defaultValue":""},{"name":"multiLine","type":"Boolean","initOnly":true,"localizable":false,"editableBinding":false,"readOnly":false,"required":false,"owner":"widgets.brease.Button","projectable":true,"description":"If true, more than one line is possible.<br/>\nText will wrap when necessary (if property wordWrap is set to true) or at explicit line breaks (\\n).\nIf false, text will never wrap to the next line. The text continues on the same line.\n","category":"Behavior","defaultValue":"false"},{"name":"permissionOperate","type":"RoleCollection","initOnly":true,"localizable":false,"editableBinding":false,"readOnly":false,"required":false,"owner":"brease.core.BaseWidget","projectable":true,"description":"restricts operability to users, which have given roles\n","category":"Accessibility"},{"name":"permissionView","type":"RoleCollection","initOnly":true,"localizable":false,"editableBinding":false,"readOnly":false,"required":false,"owner":"brease.core.BaseWidget","projectable":true,"description":"restricts visibility to users, which have given roles\n","category":"Accessibility"},{"name":"style","type":"StyleReference","initOnly":false,"localizable":false,"editableBinding":false,"readOnly":false,"required":false,"owner":"brease.core.BaseWidget","projectable":true,"description":"reference to a style for this widget type\n","category":"Appearance","defaultValue":"default"},{"name":"text","type":"String","initOnly":false,"localizable":true,"editableBinding":false,"readOnly":false,"required":false,"owner":"widgets.brease.Button","projectable":true,"description":"Text which is displayed in the widget\n","category":"Appearance","defaultValue":""},{"name":"tooltip","type":"String","initOnly":true,"localizable":true,"editableBinding":false,"readOnly":false,"required":false,"owner":"brease.core.BaseWidget","projectable":true,"description":"reference to a tooltip for a widget\n","category":"Appearance","defaultValue":""},{"name":"value","type":"Boolean","initOnly":false,"localizable":false,"editableBinding":true,"readOnly":false,"required":false,"owner":"widgets.brease.ToggleButton","projectable":true,"description":"Represents the boolean state of the element.\n","category":"Data","defaultValue":"false"},{"name":"visible","type":"Boolean","initOnly":false,"localizable":false,"editableBinding":false,"readOnly":false,"required":false,"owner":"brease.core.BaseWidget","projectable":true,"description":"change visibility\n","category":"Behavior","defaultValue":"true"},{"name":"wordWrap","type":"Boolean","initOnly":true,"localizable":false,"editableBinding":false,"readOnly":false,"required":false,"owner":"widgets.brease.Button","projectable":true,"description":"If true, text will wrap when necessary.<br/>\nThis property has no effect, if multiLine=false\n","category":"Behavior","defaultValue":"false"},{"name":"imageHeight","type":"ImageSize","defaultValue":"0","description":"height of the image","initOnly":true,"required":false,"readOnly":false,"projectable":true,"hide":false,"cssProp":true},{"name":"imageWidth","type":"ImageSize","defaultValue":"0","description":"width of the image","initOnly":true,"required":false,"readOnly":false,"projectable":true,"hide":false,"cssProp":true},{"name":"maxHeight","type":"Size","defaultValue":"0","description":"maximum outer height of widget","initOnly":true,"required":false,"readOnly":false,"projectable":true,"hide":false,"cssProp":true},{"name":"minHeight","type":"Size","defaultValue":"0","description":"minimum outer height of widget","initOnly":true,"required":false,"readOnly":false,"projectable":true,"hide":false,"cssProp":true},{"name":"maxWidth","type":"Size","defaultValue":"0","description":"maximum outer width of widget","initOnly":true,"required":false,"readOnly":false,"projectable":true,"hide":false,"cssProp":true},{"name":"minWidth","type":"Size","defaultValue":"0","description":"minimum outer width of widget","initOnly":true,"required":false,"readOnly":false,"projectable":true,"hide":false,"cssProp":true},{"name":"zIndex","type":"UInteger","description":"The zIndex property specifies the z-order of a widget and its childs.<br/>\r\n        When widgets overlap, z-order determines which one covers the other. A widget with a larger zIndex generally covers a widget with a lower one.<br/>\r\n        The zIndex must be unique within a content.<br/>","initOnly":true,"required":true,"readOnly":false,"projectable":true,"owner":"brease.core.BaseWidget","hide":false,"cssProp":true},{"name":"left","type":"Integer","description":"absolute position measured from left boundary of parent container","initOnly":true,"required":false,"readOnly":false,"projectable":true,"owner":"brease.core.BaseWidget","hide":false,"cssProp":true},{"name":"top","type":"Integer","description":"absolute position measured from top boundary of parent container","initOnly":true,"required":false,"readOnly":false,"projectable":true,"owner":"brease.core.BaseWidget","hide":false,"cssProp":true},{"name":"height","type":"AutoSize","defaultValue":"30","description":"outer height of widget","initOnly":true,"required":false,"readOnly":false,"projectable":true,"owner":"widgets.brease.Button","hide":false,"cssProp":true},{"name":"width","type":"AutoSize","defaultValue":"100","description":"outer width of widget","initOnly":true,"required":false,"readOnly":false,"projectable":true,"owner":"widgets.brease.Button","hide":false,"cssProp":true}],"dependencies":{"files":["widgets/brease/Button/Button.js","brease/enum/Enum.js","brease/core/Utils.js","brease/core/Types.js","brease/events/BreaseEvent.js","widgets/brease/common/libs/wfUtils/UtilsEditableBinding.js"],"widgets":["widgets/brease/ToggleButton/ToggleButton.js","widgets/brease/Button/Button.js"]},"categories":{"Category":["Buttons"]},"descriptions":{"short":"Umschalten zwischen true/false","de":"Schaltet einen Wert zwischen true und false wenn der Benutzer darauf klickt","en":"Toggles a value between true and false when the user clicks it"},"superproperties":{"id":{"type":"WidgetId"},"enable":{"type":"Boolean"},"permissionOperate":{"type":"RoleCollection"},"permissionView":{"type":"RoleCollection"},"style":{"type":"StyleReference"},"tooltip":{"type":"String"},"visible":{"type":"Boolean"},"zIndex":{"type":"UInteger"},"left":{"type":"Integer"},"top":{"type":"Integer"},"height":{"type":"AutoSize"},"width":{"type":"AutoSize"}},"styleproperties":{"StyleProperty":[{"$":{"name":"imageColor","category":"Appearance","type":"Color","default":"#000000"},"StyleElement":[{"$":{"selector":"&:not(.active):not(.disabled):not(.checked) svg","attribute":"fill"}}],"Description":["Color of the image - only apply if a SVG image is used"]},{"$":{"name":"mouseDownImageColor","category":"Appearance","type":"Color","default":"#000000"},"StyleElement":[{"$":{"selector":"&.active svg","attribute":"fill"}}],"Description":["Color of the image - only apply if a SVG image is used"]},{"$":{"name":"disabledImageColor","category":"Appearance","type":"Color","default":"#000000"},"StyleElement":[{"$":{"selector":"&.disabled svg","attribute":"fill"}}],"Description":["Color of the image - only apply if a SVG image is used"]},{"$":{"name":"borderStyle","type":"BorderStyle","category":"Appearance","default":"solid"},"StyleElement":[{"$":{"attribute":"border-style"}},{"$":{"selector":"&.active","attribute":"border-style"}},{"$":{"selector":"&.checked","attribute":"border-style"}},{"$":{"selector":"&.disabled","attribute":"border-style"}}],"Description":["Style of the Border of the widget"]},{"$":{"name":"borderWidth","type":"PixelValCollection","category":"Appearance","default":"2px"},"StyleElement":[{"$":{"selector":"&:not(.active):not(.checked)","attribute":"border-width"}},{"$":{"selector":"&.disabled","attribute":"border-width"}}],"Description":["Sets the width of the border. For further information, please check its type"]},{"$":{"name":"cornerRadius","type":"PixelValCollection","category":"Appearance","default":"0px"},"StyleElement":[{"$":{"attribute":"@include border-radius($value)"}}],"Description":["Sets the radius of the widget rounded corners. For further information, please check its type"]},{"$":{"name":"backColor","category":"Appearance","type":"Color","default":"#DBDBDB","owner":"widgets.brease.ToggleButton"},"StyleElement":[{"$":{"selector":"&:not(.disabled):not(.active):not(.checked)","attribute":"background-color"}}],"Description":["Sets the background color of the widget"]},{"$":{"name":"disabledBackColor","category":"Appearance","type":"Color","default":"#F1F1F1","owner":"widgets.brease.ToggleButton"},"StyleElement":[{"$":{"selector":"&.disabled:not(.checked)","attribute":"background-color"}}],"Description":["Sets the background color when disabled"]},{"$":{"name":"backGroundGradient","category":"Appearance","type":"Gradient","default":""},"StyleElement":[{"$":{"selector":"&:not(.disabled):not(.active):not(.checked)","attribute":"@include backGroundGradient('$value')"}}],"Description":["Background as a gradient"]},{"$":{"name":"disabledBackGroundGradient","category":"Appearance","type":"Gradient","default":""},"StyleElement":[{"$":{"selector":"&.disabled","attribute":"@include backGroundGradient('$value')"}},{"$":{"selector":"&.disabled.active","attribute":"@include backGroundGradient('$value')"}},{"$":{"selector":"&.disabled.checked","attribute":"@include backGroundGradient('$value')"}}],"Description":["Background as a gradient"]},{"$":{"name":"mouseDownBackGroundGradient","category":"Appearance","type":"Gradient","default":""},"StyleElement":[{"$":{"selector":"&.active:not(.disabled)","attribute":"@include backGroundGradient('$value')"}},{"$":{"selector":"&.checked:not(.disabled)","attribute":"@include backGroundGradient('$value')"}}],"Description":["Background as a gradient when widget is clicked"]},{"$":{"name":"backGround","category":"Appearance","type":"ImagePath","default":""},"StyleElement":[{"$":{"selector":"&:not(.disabled)","attribute":"@include pureBackgroundImage('../$value')"}}],"Description":["Sets the path for an image as background"]},{"$":{"name":"borderColor","category":"Appearance","type":"ColorCollection","default":"#5B7C70","owner":"widgets.brease.ToggleButton"},"StyleElement":[{"$":{"selector":"&:not(.disabled):not(.checked)","attribute":"border-color"}}],"Description":["Sets the border color of the widget. For further information, please see its type"]},{"$":{"name":"disabledBorderColor","category":"Appearance","type":"ColorCollection","default":"#FFFFFF #C8C8C8 #C8C8C8 #FFFFFF","owner":"widgets.brease.ToggleButton"},"StyleElement":[{"$":{"selector":"&.disabled:not(.active):not(.checked)","attribute":"border-color"}}],"Description":["Sets the color of the border when disabled"]},{"$":{"name":"textColor","category":"Appearance","type":"Color","default":"#000000"},"StyleElement":[{"$":{"selector":"&:not(.disabled):not(.active):not(.checked) span","attribute":"color"}}],"Description":["Sets the color of the text when enabled"]},{"$":{"name":"disabledTextColor","category":"Appearance","type":"Color","default":"#989898"},"StyleElement":[{"$":{"selector":"&.disabled span","attribute":"color"}},{"$":{"selector":"&.disabled.active span","attribute":"color"}},{"$":{"selector":"&.disabled:checked span","attribute":"color"}}],"Description":["Sets the color of the text when disabled"]},{"$":{"name":"mouseDownBorderColor","category":"Appearance","type":"ColorCollection","default":"#FD7B01","owner":"widgets.brease.ToggleButton"},"StyleElement":[{"$":{"selector":"&.active:not(.disabled):not(.editMode)","attribute":"border-color"}}],"Description":["border color when the widget is pressed"]},{"$":{"name":"mouseDownBorderWidth","category":"Appearance","type":"PixelValCollection","default":"2px"},"StyleElement":[{"$":{"selector":"&.active:not(.disabled):not(.editMode)","attribute":"border-width"}},{"$":{"selector":"&.checked:not(.disabled)","attribute":"border-width"}}],"Description":["border width when widget is clicked"]},{"$":{"name":"mouseDownBackColor","category":"Appearance","type":"Color","default":"#DBDBDB","owner":"widgets.brease.ToggleButton"},"StyleElement":[{"$":{"selector":"&.active:not(.disabled):not(.editMode)","attribute":"background-color"}}],"Description":["back color when the widget is pressed"]},{"$":{"name":"mouseDownTextColor","category":"Appearance","type":"Color","default":"#000000"},"StyleElement":[{"$":{"selector":"&.active:not(.disabled):not(.editMode) span","attribute":"color"}},{"$":{"selector":"&.checked:not(.disabled) span","attribute":"color"}}],"Description":["text color when widget is clicked"]},{"$":{"name":"textAlign","category":"Appearance","type":"brease.enum.TextAlign","default":"center"},"StyleElement":[{"$":{"attribute":"@include text-alignment($value)"}}],"Description":["Alignment of the text"]},{"$":{"name":"opacity","category":"Appearance","type":"Opacity","default":"1"},"StyleElement":[{"$":{"attribute":"opacity"}}],"Description":["Opacity of the widget"]},{"$":{"name":"rotation","category":"Appearance","type":"Rotation","default":"0deg"},"StyleElement":[{"$":{"attribute":"@include rotate($value)"}}],"Description":["Rotation of widget."]},{"$":{"name":"fontSize","category":"Font","type":"PixelVal","default":"12px"},"StyleElement":[{"$":{"selector":"span","attribute":"font-size"}}],"Description":["Fontsize of the text in pixel"]},{"$":{"name":"fontName","category":"Font","type":"FontName","default":"Arial"},"StyleElement":[{"$":{"selector":"span","attribute":"font-family"}}],"Description":["Fontname of the text"]},{"$":{"name":"bold","category":"Font","type":"Boolean","default":"false"},"StyleElement":[{"$":{"selector":"span","attribute":"@include font-weight-bold($value)"}}],"Description":["If *true* font style is bold"]},{"$":{"name":"italic","category":"Font","type":"Boolean","default":"false"},"StyleElement":[{"$":{"selector":"span","attribute":"@include font-style-italic($value)"}}],"Description":["If *true* font style is italic"]},{"$":{"name":"padding","category":"Layout","type":"Padding","default":"0px 10px"},"StyleElement":[{"$":{"attribute":"padding"}}],"Description":["Padding of the Widget"]},{"$":{"name":"margin","category":"Layout","type":"Margin","default":"0px"},"StyleElement":[{"$":{"attribute":"margin"}}],"Description":["Margin of the Widget"]},{"$":{"name":"shadow","type":"Shadow","category":"Appearance","default":"none"},"StyleElement":[{"$":{"selector":"&:not(.active):not(.checked)","attribute":"@include box-shadow($value)"}},{"$":{"selector":"&.disabled.active","attribute":"@include box-shadow($value)"}},{"$":{"selector":"&.disabled.checked","attribute":"@include box-shadow($value)"}}],"Description":["Shadow of the Widget"]},{"$":{"name":"mouseDownShadow","type":"Shadow","category":"Appearance","default":"none","owner":"widgets.brease.ToggleButton"},"StyleElement":[{"$":{"selector":"&.active:not(.disabled):not(.editMode)","attribute":"@include box-shadow($value)"}},{"$":{"selector":"&.checked","attribute":"@include box-shadow($value)"}},{"$":{"selector":"&.disabled.checked","attribute":"@include box-shadow($value)"}}],"Description":["Shadow of the Widget when the widget clicked"]},{"$":{"name":"checkedBackColor","category":"Appearance","type":"Color","default":"#DBDBDB"},"StyleElement":[{"$":{"selector":"&.checked:not(.active):not(.disabled)","attribute":"background-color"}}],"Description":["back color when the widget is checked"]},{"$":{"name":"checkedTextColor","category":"Appearance","type":"Color","default":"#000000"},"StyleElement":[{"$":{"selector":"&.checked:not(.disabled):not(.active) span","attribute":"color"}}],"Description":["text color when the widget is checked"]},{"$":{"name":"checkedImageColor","category":"Appearance","type":"Color","default":"#000000"},"StyleElement":[{"$":{"selector":"&.checked:not(.disabled):not(.active) svg","attribute":"fill"}}],"Description":["Color of the image when the the widget is checked - only apply if a SVG image is used"]},{"$":{"name":"disabledCheckedTextColor","category":"Appearance","type":"Color","default":"#000000"},"StyleElement":[{"$":{"selector":"&.disabled.checked:not(.active) span","attribute":"color"}}],"Description":["text color when the widget is checked and disabled"]},{"$":{"name":"disabledCheckedImageColor","category":"Appearance","type":"Color","default":"#000000"},"StyleElement":[{"$":{"selector":"&.disabled.checked:not(.active) svg","attribute":"fill"}}],"Description":["Color of the image when the the widget is checked - only apply if a SVG image is used"]},{"$":{"name":"checkedBorderColor","category":"Appearance","type":"ColorCollection","default":"#FD7B01"},"StyleElement":[{"$":{"selector":"&.checked:not(.active):not(.disabled)","attribute":"border-color"}}],"Description":["border color when the widget is checked"]},{"$":{"name":"disabledCheckedBackColor","category":"Appearance","type":"Color","default":"#F1F1F1"},"StyleElement":[{"$":{"selector":"&.disabled.checked","attribute":"background-color"}}],"Description":["back color when the widget is checked and disabled"]},{"$":{"name":"disabledCheckedBorderColor","category":"Appearance","type":"ColorCollection","default":"#FFFFFF #C8C8C8 #C8C8C8 #FFFFFF"},"StyleElement":[{"$":{"selector":"&.disabled.checked","attribute":"border-color"}}],"Description":["border color when the widget is checked and disabled"]},{"$":{"name":"checkedBackGroundGradient","category":"Appearance","type":"Gradient","default":""},"StyleElement":[{"$":{"selector":"&.checked:not(.disabled):not(.active)","attribute":"@include backGroundGradient('$value')"}}],"Description":["Background as a gradient"]},{"$":{"name":"disabledCheckedBackGroundGradient","category":"Appearance","type":"Gradient","default":""},"StyleElement":[{"$":{"selector":"&.disabled.checked","attribute":"@include backGroundGradient('$value')"}}],"Description":["Background as a gradient"]}],"$":{}},"propertygroups":{"PropertyGroup":[{"$":{"name":"Size","type":"String","category":"Layout"},"Description":["outer height and width of widget"]},{"$":{"name":"Position","type":"String","category":"Layout"},"Description":["top and left of widget"]}]}}