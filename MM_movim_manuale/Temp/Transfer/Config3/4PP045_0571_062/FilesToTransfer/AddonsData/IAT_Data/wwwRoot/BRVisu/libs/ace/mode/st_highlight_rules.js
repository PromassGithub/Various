/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

define(function (require, exports, module) {
    'use strict';

    var oop = require('../lib/oop');
    var TextHighlightRules = require('./text_highlight_rules').TextHighlightRules;

    var STHighlightRules = function () {

        var IECKeywords = 'DO_PATH_SYNCH|END_PATH_SYNCH|IP_EVAL|CYCLIC_PS_BL|CYCLIC_PS|CYCLIC_BL|CYCLIC|END_CYCLIC|REFERENCE|TO|DO|' + 
'FOR|BY|END_FOR|IF|THEN|ELSIF|ELSE|END_IF|CASE|END_CASE|WHILE|END_WHILE|REPEAT|UNTIL|END_REPEAT|EXIT|RETURN|SEL|MUX|' + 
'TYPE|END_TYPE|VAR|VAR_GLOBAL|VAR_INPUT|VAR_OUTPUT|VAR_IN_OUT|END_VAR|RETAIN|IP_RETAIN|AT|PLC|UNRETAIN_VAR|IP_SYNCH|PATH_SYNCH|' + 
'CONSTANT|IP_GLOBAL|SHARED_IP_GLOBAL|NC_GLOBAL|PLC_GLOBAL|LOCAL|ARRAY|OF|STRUCT|END_STRUCT|' +
'PROGRAM|_CYCLIC|_INIT|_MAIN|_EXIT|END_PROGRAM|FUNCTION|END_FUNCTION|FUNCTION_BLOCK|END_FUNCTION_BLOCK|RETURN|ACCESS|ACTION|END_ACTION|' +
'COROUTINE_CREATE|COROUTINE_RESUME|COROUTINE_YIELD|COROUTINE_DELETE|COROUTINE_STATE';

        var IECTypes = 'BOOL|STRING|WSTRING|TIME|SINT|INT|DINT|USINT|UINT|UDINT|REAL|LREAL|DATE|DATE_AND_TIME|DT|TIME_OF_DAY|TOD|BYTE|WORD|DWORD';

        var IECFunctions = 'ABS|SIN|COS|TAN|ASIN|ACOS|ATAN|SQRT|LN|EXP|LOG|EXPT|TRUNC|ADR|REF|SIZEOF|LIMIT|MIN|MAX|ROL|ROR|SHR|SHL|BIT_TST|BIT_SET|BIT_CLR|TO_BOOL|TO_USINT|TO_BYTE|TO_SINT|TO_UINT|TO_WORD|TO_INT|TO_UDINT|TO_DWORD|TO_DINT|TO_TIME|TO_DT|TO_DATE_AND_TIME|TO_TOD|TO_TIME_OF_DAY|TO_DATE|TO_REAL|TO_LREAL|TO_STRING|TO_WSTRING|USINT_TO_BOOL|SINT_TO_BOOL|UINT_TO_BOOL|INT_TO_BOOL|UDINT_TO_BOOL|DINT_TO_BOOL|REAL_TO_BOOL|LREAL_TO_BOOL|TIME_TO_BOOL|DT_TO_BOOL|TOD_TO_BOOL|BYTE_TO_BOOL|WORD_TO_BOOL|DWORD_TO_BOOL|BOOL_TO_USINT|SINT_TO_USINT|UINT_TO_USINT|INT_TO_USINT|UDINT_TO_USINT|DINT_TO_USINT|REAL_TO_USINT|LREAL_TO_USINT|BOOL_TO_SINT|USINT_TO_SINT|UINT_TO_SINT|INT_TO_SINT|UDINT_TO_SINT|DINT_TO_SINT|REAL_TO_SINT|LREAL_TO_SINT|BOOL_TO_UINT|SINT_TO_UINT|USINT_TO_UINT|INT_TO_UINT|UDINT_TO_UINT|DINT_TO_UINT|REAL_TO_UINT|LREAL_TO_UINT|BOOL_TO_INT|SINT_TO_INT|USINT_TO_INT|UINT_TO_INT|UDINT_TO_INT|DINT_TO_INT|REAL_TO_INT|LREAL_TO_INT|BOOL_TO_UDINT|USINT_TO_UDINT|SINT_TO_UDINT|UINT_TO_UDINT|INT_TO_UDINT|DINT_TO_UDINT|REAL_TO_UDINT|LREAL_TO_UDINT|TIME_TO_UDINT|DT_TO_UDINT|BOOL_TO_DINT|USINT_TO_DINT|SINT_TO_DINT|UINT_TO_DINT|INT_TO_DINT|UDINT_TO_DINT|REAL_TO_DINT|LREAL_TO_DINT|TIME_TO_DINT|DT_TO_DINT|BOOL_TO_TIME|DINT_TO_TIME|UDINT_TO_TIME|BOOL_TO_DT|DINT_TO_DT|UDINT_TO_DT|BOOL_TO_REAL|USINT_TO_REAL|SINT_TO_REAL|UINT_TO_REAL|INT_TO_REAL|UDINT_TO_REAL|DINT_TO_REAL|LREAL_TO_REAL|TIME_TO_REAL|BOOL_TO_LREAL|USINT_TO_LREAL|SINT_TO_LREAL|UINT_TO_LREAL|INT_TO_LREAL|UDINT_TO_LREAL|DINT_TO_LREAL|REAL_TO_LREAL|TIME_TO_LREAL|BOOL_TO_STRING|USINT_TO_STRING|SINT_TO_STRING|UINT_TO_STRING|INT_TO_STRING|UDINT_TO_STRING|DINT_TO_STRING|REAL_TO_STRING|LREAL_TO_STRING|STRING_TO_BOOL|STRING_TO_USINT|STRING_TO_SINT|STRING_TO_UINT|STRING_TO_INT|STRING_TO_UDINT|STRING_TO_DINT|STRING_TO_REAL|STRING_TO_LREAL|LEN|LEFT|RIGHT|MID|CONCAT|INSERT|DELETE|REPLACE|FIND|IP_INST_NUM|IP_OWNER_ID|PACKET_DATA_ADR|PACKET_COMMAND_ADR';

        var IECProcedures = 'SetCyclicId|WaitForCyclic|REPORT|WARN|HALT|ERROR|LOADBG|LOAD|UNLOAD|EXEC|EVAL|PUSH_PACKET|PUSH_PACKET_CMD|DISPATCH_AND_WAIT|START_PACKET_LIST|END_PACKET_LIST|MpLogWrite|MpLogContinue|MpLogInterrupt|SET_BLOCK_NUMBER|SingleStepOff|SingleStepOn';

        var IECConstants = 'TRUE|FALSE|LANGUAGE_DEFAULT|LANGUAGE_CALLER|LANGUAGE_BR_GCODE|LANGUAGE_ALTERNATIVE_1|LANGUAGE_ST|NULL';

        var MCProcedures = 'SET_POINT|SET_AXIS_TARGET|SET_CIRCLE|SET_CIRCLE2D|Feedrate|InverseTimeFeedrate|FeedPerRevolution|TransitionArcs|TangentialToolOn|TangentialToolOff|TangentialToolAlignment|RoundingEdges|ChamferLength|ChamferWidth|AccuracyHold|SetFrame|AddFrame|TcpFrame|SetPCS|SetFrameProperty|SetFrameIndex|ZeroPointOffset|SetToolPar|SetTool|MoveL|MoveLR|MoveJ|MoveJR|MoveA|MoveAR|MoveC|MoveCWRadius|MoveCCWRadius|MoveCWAngle|MoveCCWAngle|MoveCW|MoveCCW|CirclePointAbsolute|CirclePointRelative|Absolute|Relative|GetPoint|GetJoint|GetAxisTarget|GetTool|GetToolFromTable|WaitEndMove|WaitIp|WaitTime|AxisLimits|PathLimits|ResetLimits|AxisAccelerationPercent|PathAcceleration|PathAccelerationPercent|PathDeceleration|PathDecelerationPercent|CornerDeviation|TangentialTransitionDeviation|PositiveTool|NegativeTool|ToolCompBCS|ToolCompPCS|PlaneXY|PlaneZX|PlaneYZ|CDCOff|CDCLeft|CDCRight|CDCLookahead|ConditionalStop|SetM|SafeCuboid|RemoveSafeCuboid|WorkCuboid|RemoveWorkCuboid|SafeTruncatedCone|RemoveSafeTruncatedCone|WorkTruncatedCone|RemoveWorkTruncatedCone|SafeHalfSpace|SelfCollisionOn|SelfCollisionOff|WireFrameModel|RemoveSafeHalfSpace|WorkHalfSpace|RemoveWorkHalfSpace|ReleaseAxis|MoveVelocity|MovePosition|MoveThread|AxisSpeed|ConstantSurfaceSpeedOn|ConstantSurfaceSpeedOff|JointToPoint|PointToJoint|FrameTrans|FrameRotX|FrameRotY|FrameRotZ|FromOrient|ToOrient|FromFrame|ToFrame|FrameApply|ImperialUnits|MetricUnits|Probe|ProbeStop|SignalPrediction|SignalDistance|SignalTime|CompressorOn|CompressorOff|LinearFeedCharacteristicOn|LinearFeedCharacteristicOff|Geometry|AxesInJACS|AxesInACS';

        var MCTypes = 'McJointAxisType|McSlaveAxisType|McOrientType|McPosType|McFrameType|McToolType|McPointType|McAxisTargetType|McMonitoredCuboidType|McMonitoredHalfSpaceType|McMonitoredTruncatedConeType|McLatchPositionsType';

        var MCConstants = 'MC_DEFAULT_ANGLES|MC_CARDAN_XYZ_ANGLES|MC_EULER_XYZ_ANGLES|MC_CARDAN_XZY_ANGLES|MC_EULER_XZY_ANGLES|MC_CARDAN_YXZ_ANGLES|MC_EULER_YXZ_ANGLES|MC_CARDAN_YZX_ANGLES|MC_EULER_YZX_ANGLES|MC_CARDAN_ZXY_ANGLES|MC_EULER_ZXY_ANGLES|MC_CARDAN_ZYX_ANGLES|MC_EULER_ZYX_ANGLES|MC_EULER_XYX_ANGLES|MC_EULER_XZX_ANGLES|MC_EULER_YXY_ANGLES|MC_EULER_YZY_ANGLES|MC_EULER_ZXZ_ANGLES|MC_EULER_ZYZ_ANGLES|MC_POSITIVE_ANGLES|MC_NEGATIVE_ANGLES|MC_DIRECT_ANGLES|MC_INDIRECT_ANGLES|MC_EULER_ANGLES|MC_CARDAN_ANGLES|MC_NAUTICAL_ANGLES|MC_TAIT_BRYAN_ANGLES|MC_PLANE_XY|MC_PLANE_YZ|MC_PLANE_ZX|MC_ID_MAX_CORNER_DEVIATION|MC_ID_MAX_TANGENTIAL_TRANSITION_DEVIATION|MC_ACS|MC_MCS|MC_PCS|MC_SCS1|MC_SCS2|MC_SCS3|MC_SCS4|MC_SCS5|MC_JACS|MC_TOOL_PAR_X|MC_TOOL_PAR_Y|MC_TOOL_PAR_Z|MC_TOOL_PAR_ANGLE1|MC_TOOL_PAR_ANGLE2|MC_TOOL_PAR_ANGLE3|MC_TOOL_PAR_RADIUS|MC_TOOL_PAR_LENGTH|MC_TOOL_PAR_POSITION|MC_ALIGNED_TO_PATH|MC_ALIGNED_TO_NEXT_MOVEMENT|MC_CW|MC_CCW|MC_STOP|MC_X|MC_Y|MC_Z|MC_EDGE_NOT_USED|MC_EDGE_CONNECTION_LINE|MC_EDGE_POINT|MC_TRANS|MC_ATRANS|MC_ROT|MC_AROT|MC_SCALE|MC_ASCALE|MC_MIRROR|MC_AMIRROR|MC_NAME_A|MC_NAME_A1|MC_NAME_A2|MC_NAME_A3|MC_NAME_A4|MC_NAME_A5|MC_NAME_A6|MC_NAME_B|MC_NAME_B1|MC_NAME_B2|MC_NAME_B3|MC_NAME_B4|MC_NAME_B5|MC_NAME_B6|MC_NAME_C|MC_NAME_C1|MC_NAME_C2|MC_NAME_C3|MC_NAME_C4|MC_NAME_C5|MC_NAME_C6|MC_NAME_D|MC_NAME_D1|MC_NAME_D2|MC_NAME_D3|MC_NAME_D4|MC_NAME_D5|MC_NAME_D6|MC_NAME_E|MC_NAME_E1|MC_NAME_E2|MC_NAME_E3|MC_NAME_E4|MC_NAME_E5|MC_NAME_E6|MC_NAME_F|MC_NAME_F1|MC_NAME_F2|MC_NAME_F3|MC_NAME_F4|MC_NAME_F5|MC_NAME_F6|MC_NAME_G|MC_NAME_G1|MC_NAME_G2|MC_NAME_G3|MC_NAME_G4|MC_NAME_G5|MC_NAME_G6|MC_NAME_H|MC_NAME_H1|MC_NAME_H2|MC_NAME_H3|MC_NAME_H4|MC_NAME_H5|MC_NAME_H6|MC_NAME_I|MC_NAME_I1|MC_NAME_I2|MC_NAME_I3|MC_NAME_I4|MC_NAME_I5|MC_NAME_I6|MC_NAME_J|MC_NAME_J1|MC_NAME_J2|MC_NAME_J3|MC_NAME_J4|MC_NAME_J5|MC_NAME_J6|MC_NAME_K|MC_NAME_K1|MC_NAME_K2|MC_NAME_K3|MC_NAME_K4|MC_NAME_K5|MC_NAME_K6|MC_NAME_L|MC_NAME_L1|MC_NAME_L2|MC_NAME_L3|MC_NAME_L4|MC_NAME_L5|MC_NAME_L6|MC_NAME_M|MC_NAME_M1|MC_NAME_M2|MC_NAME_M3|MC_NAME_M4|MC_NAME_M5|MC_NAME_M6|MC_NAME_N|MC_NAME_N1|MC_NAME_N2|MC_NAME_N3|MC_NAME_N4|MC_NAME_N5|MC_NAME_N6|MC_NAME_O|MC_NAME_O1|MC_NAME_O2|MC_NAME_O3|MC_NAME_O4|MC_NAME_O5|MC_NAME_O6|MC_NAME_P|MC_NAME_P1|MC_NAME_P2|MC_NAME_P3|MC_NAME_P4|MC_NAME_P5|MC_NAME_P6|MC_NAME_Q|MC_NAME_Q1|MC_NAME_Q2|MC_NAME_Q3|MC_NAME_Q4|MC_NAME_Q5|MC_NAME_Q6|MC_NAME_R|MC_NAME_R1|MC_NAME_R2|MC_NAME_R3|MC_NAME_R4|MC_NAME_R5|MC_NAME_R6|MC_NAME_S|MC_NAME_S1|MC_NAME_S2|MC_NAME_S3|MC_NAME_S4|MC_NAME_S5|MC_NAME_S6|MC_NAME_T|MC_NAME_T1|MC_NAME_T2|MC_NAME_T3|MC_NAME_T4|MC_NAME_T5|MC_NAME_T6|MC_NAME_U|MC_NAME_U1|MC_NAME_U2|MC_NAME_U3|MC_NAME_U4|MC_NAME_U5|MC_NAME_U6|MC_NAME_V|MC_NAME_V1|MC_NAME_V2|MC_NAME_V3|MC_NAME_V4|MC_NAME_V5|MC_NAME_V6|MC_NAME_W|MC_NAME_W1|MC_NAME_W2|MC_NAME_W3|MC_NAME_W4|MC_NAME_W5|MC_NAME_W6|MC_NAME_X|MC_NAME_X1|MC_NAME_X2|MC_NAME_X3|MC_NAME_X4|MC_NAME_X5|MC_NAME_X6|MC_NAME_Y|MC_NAME_Y1|MC_NAME_Y2|MC_NAME_Y3|MC_NAME_Y4|MC_NAME_Y5|MC_NAME_Y6|MC_NAME_Z|MC_NAME_Z1|MC_NAME_Z2|MC_NAME_Z3|MC_NAME_Z4|MC_NAME_Z5|MC_NAME_Z6|MC_NAME_RTCP|MC_NAME_RTCP1|MC_NAME_RTCP2|MC_NAME_TCP_A|MC_NAME_TCP_A1|MC_NAME_TCP_A2|MC_NAME_TCP_A3|MC_NAME_TCP_A4|MC_NAME_TCP_A5|MC_NAME_TCP_A6|MC_NAME_TCP_B|MC_NAME_TCP_B1|MC_NAME_TCP_B2|MC_NAME_TCP_B3|MC_NAME_TCP_B4|MC_NAME_TCP_B5|MC_NAME_TCP_B6|MC_NAME_TCP_C|MC_NAME_TCP_C1|MC_NAME_TCP_C2|MC_NAME_TCP_C3|MC_NAME_TCP_C4|MC_NAME_TCP_C5|MC_NAME_TCP_C6|MC_NAME_TCP_D|MC_NAME_TCP_D1|MC_NAME_TCP_D2|MC_NAME_TCP_D3|MC_NAME_TCP_D4|MC_NAME_TCP_D5|MC_NAME_TCP_D6|MC_NAME_TCP_E|MC_NAME_TCP_E1|MC_NAME_TCP_E2|MC_NAME_TCP_E3|MC_NAME_TCP_E4|MC_NAME_TCP_E5|MC_NAME_TCP_E6|MC_NAME_TCP_F|MC_NAME_TCP_F1|MC_NAME_TCP_F2|MC_NAME_TCP_F3|MC_NAME_TCP_F4|MC_NAME_TCP_F5|MC_NAME_TCP_F6|MC_NAME_TCP_G|MC_NAME_TCP_G1|MC_NAME_TCP_G2|MC_NAME_TCP_G3|MC_NAME_TCP_G4|MC_NAME_TCP_G5|MC_NAME_TCP_G6|MC_NAME_TCP_H|MC_NAME_TCP_H1|MC_NAME_TCP_H2|MC_NAME_TCP_H3|MC_NAME_TCP_H4|MC_NAME_TCP_H5|MC_NAME_TCP_H6|MC_NAME_TCP_I|MC_NAME_TCP_I1|MC_NAME_TCP_I2|MC_NAME_TCP_I3|MC_NAME_TCP_I4|MC_NAME_TCP_I5|MC_NAME_TCP_I6|MC_NAME_TCP_J|MC_NAME_TCP_J1|MC_NAME_TCP_J2|MC_NAME_TCP_J3|MC_NAME_TCP_J4|MC_NAME_TCP_J5|MC_NAME_TCP_J6|MC_NAME_TCP_K|MC_NAME_TCP_K1|MC_NAME_TCP_K2|MC_NAME_TCP_K3|MC_NAME_TCP_K4|MC_NAME_TCP_K5|MC_NAME_TCP_K6|MC_NAME_TCP_L|MC_NAME_TCP_L1|MC_NAME_TCP_L2|MC_NAME_TCP_L3|MC_NAME_TCP_L4|MC_NAME_TCP_L5|MC_NAME_TCP_L6|MC_NAME_TCP_M|MC_NAME_TCP_M1|MC_NAME_TCP_M2|MC_NAME_TCP_M3|MC_NAME_TCP_M4|MC_NAME_TCP_M5|MC_NAME_TCP_M6|MC_NAME_TCP_N|MC_NAME_TCP_N1|MC_NAME_TCP_N2|MC_NAME_TCP_N3|MC_NAME_TCP_N4|MC_NAME_TCP_N5|MC_NAME_TCP_N6|MC_NAME_TCP_O|MC_NAME_TCP_O1|MC_NAME_TCP_O2|MC_NAME_TCP_O3|MC_NAME_TCP_O4|MC_NAME_TCP_O5|MC_NAME_TCP_O6|MC_NAME_TCP_P|MC_NAME_TCP_P1|MC_NAME_TCP_P2|MC_NAME_TCP_P3|MC_NAME_TCP_P4|MC_NAME_TCP_P5|MC_NAME_TCP_P6|MC_NAME_TCP_Q|MC_NAME_TCP_Q1|MC_NAME_TCP_Q2|MC_NAME_TCP_Q3|MC_NAME_TCP_Q4|MC_NAME_TCP_Q5|MC_NAME_TCP_Q6|MC_NAME_TCP_R|MC_NAME_TCP_R1|MC_NAME_TCP_R2|MC_NAME_TCP_R3|MC_NAME_TCP_R4|MC_NAME_TCP_R5|MC_NAME_TCP_R6|MC_NAME_TCP_S|MC_NAME_TCP_S1|MC_NAME_TCP_S2|MC_NAME_TCP_S3|MC_NAME_TCP_S4|MC_NAME_TCP_S5|MC_NAME_TCP_S6|MC_NAME_TCP_T|MC_NAME_TCP_T1|MC_NAME_TCP_T2|MC_NAME_TCP_T3|MC_NAME_TCP_T4|MC_NAME_TCP_T5|MC_NAME_TCP_T6|MC_NAME_TCP_U|MC_NAME_TCP_U1|MC_NAME_TCP_U2|MC_NAME_TCP_U3|MC_NAME_TCP_U4|MC_NAME_TCP_U5|MC_NAME_TCP_U6|MC_NAME_TCP_V|MC_NAME_TCP_V1|MC_NAME_TCP_V2|MC_NAME_TCP_V3|MC_NAME_TCP_V4|MC_NAME_TCP_V5|MC_NAME_TCP_V6|MC_NAME_TCP_W|MC_NAME_TCP_W1|MC_NAME_TCP_W2|MC_NAME_TCP_W3|MC_NAME_TCP_W4|MC_NAME_TCP_W5|MC_NAME_TCP_W6|MC_NAME_TCP_X|MC_NAME_TCP_X1|MC_NAME_TCP_X2|MC_NAME_TCP_X3|MC_NAME_TCP_X4|MC_NAME_TCP_X5|MC_NAME_TCP_X6|MC_NAME_TCP_Y|MC_NAME_TCP_Y1|MC_NAME_TCP_Y2|MC_NAME_TCP_Y3|MC_NAME_TCP_Y4|MC_NAME_TCP_Y5|MC_NAME_TCP_Y6|MC_NAME_TCP_Z|MC_NAME_TCP_Z1|MC_NAME_TCP_Z2|MC_NAME_TCP_Z3|MC_NAME_TCP_Z4|MC_NAME_TCP_Z5|MC_NAME_TCP_Z6|MC_NAME_TCP_PHI|MC_NAME_TCP_THETA|MC_NAME_TCP_PSI|MC_NAME_DIRECTION_X|MC_NAME_DIRECTION_Y|MC_NAME_DIRECTION_Z|MC_NAME_LEAD|MC_NAME_TAPER|MC_NAME_TCP_RX|MC_NAME_TCP_RZ|MC_NAME_TCP_ALPHA|MC_NAME_CDC_ANGLE|MC_NAME_TANG_AXIS|MC_NAME_TCP_QW|MC_NAME_TCP_QX|MC_NAME_TCP_QY|MC_NAME_TCP_QZ|MC_NAME_TCP_RY|MC_NAME_TCP|MC_NAME_MP|MC_NAME_FRAME_BC|MC_NAME_FRAME_CB|MC_NAME_FRAME_AB|MC_NAME_FRAME_BA|MC_NAME_FRAME_AC|MC_NAME_FRAME_CA|MC_NAME_MON_POINT_1|MC_NAME_MON_POINT_2|MC_NAME_MON_POINT_3|MC_NAME_MON_POINT_4|MC_NAME_MON_POINT_5|MC_NAME_MON_POINT_6|MC_NAME_MON_POINT_7|MC_NAME_MON_POINT_8|MC_NAME_MON_POINT_9|MC_NAME_MON_POINT_10|MC_NAME_MON_POINT_11|MC_NAME_MON_POINT_12|MC_NAME_MON_POINT_13|MC_NAME_MON_POINT_14|MC_NAME_MON_POINT_15|MC_NAME_MON_POINT_16|MC_NAME_TOOL_POINT_1|MC_NAME_TOOL_POINT_2|MC_NAME_TOOL_POINT_3|MC_NAME_TOOL_POINT_4|MC_NAME_TOOL_POINT_5|MC_NAME_TOOL_POINT_6|MC_NAME_TOOL_POINT_7|MC_NAME_TOOL_POINT_8|MC_NAME_TOOL_POINT_9|MC_NAME_TOOL_POINT_10|MC_NAME_TOOL_POINT_11|MC_NAME_TOOL_POINT_12|MC_NAME_TOOL_POINT_13|MC_NAME_TOOL_POINT_14|MC_NAME_TOOL_POINT_15|MC_NAME_TOOL_POINT_16|MC_NAME_FLANGE|MC_NAME_QP1|MC_NAME_A0|MC_NAME_B0|MC_NAME_PQ1|MC_NAME_Q2Anchor|MC_NAME_Q2Actuator|MC_NAME_Q3Anchor|MC_NAME_Q3Actuator|MC_FRM_0|MC_POINT_0|MC_REF_0|MC_ORIENT_0';

        var IECIgnored = 'REDUND_CONTEXT|REDUND_UNREPLICABLE|REDUND_OK';

        var IECOperators = 'AND|OR|XOR|NOT|MOD';

        var keywordMapper = this.createKeywordMapper({
            'support.function': IECFunctions + '|' + IECProcedures + '|' + MCProcedures,
            'support.type': IECTypes + '|' + MCTypes,
            'keyword.control': IECKeywords,
            'support.constant': IECConstants + '|' + MCConstants,
            'keyword.operator': IECOperators,
            'comment': IECIgnored
        }, 'identifier', false);

        this.$rules = {
            'start': [ {
                token: 'comment',
                regex: '//.*$'
            }, {
                token: 'comment', 
                regex: '\\(\\*', 
                next: 'comment'
            }, {
                token: 'comment', 
                regex: '#pragma N[0-9]*'
            }, {
                token: 'string', // WCHAR string
                regex: '".*?"'
            }, {
                token: 'string', // string
                regex: "'.*?'"
            }, {
                token: 'constant.numeric', // binary integer
                regex: '(?:[+-]?2#_[01][01_]+|2#[01][01_]+|2#_[01]|2#[01])\\b'
            }, {
                token: 'constant.numeric', // octal integer
                regex: '(?:[+-]?8#_[0-7][0-7_]+|8#[0-7][0-7_]+|8#_[0-7]|8#[0-7])\\b'
            }, {
                token: 'constant.numeric', // hex integer
                regex: '(?:[+-]?16#_[0-9a-fA-F][0-9a-fA-F]+|16#[0-9a-fA-F][0-9a-fA-F_]+|16#_[0-9a-fA-F]|16#[0-9a-fA-F])\\b'
            }, {
                token: 'constant.numeric', // float, integer
                regex: '[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b'
            }, {
                token: keywordMapper,
                regex: '[a-zA-Z_$][a-zA-Z0-9_$]*\\b'
            }, {
                token: 'keyword.operator',
                regex: '\\*|\\+|\\-|\\/|<|>|<=|=>|:=|<>|='
            }, {
                token: 'keyword.directive',
                regex: '#\\s*(?:include|pragma)\\b'
            }, {
                token: 'paren.lparen',
                regex: '[\\(|{|\\[]'
            }, {
                token: 'paren.rparen',
                regex: '[\\)|}|\\]]'
            }, {
                token: 'text',
                regex: '\\s+'
            } ],
            comment: [
                {
                    token: 'comment',
                    regex: '\\*\\)',
                    next: 'start'
                }, {
                    defaultToken: 'comment'
                }
            ]
        };
    };

    oop.inherits(STHighlightRules, TextHighlightRules);

    exports.STHighlightRules = STHighlightRules;
});
